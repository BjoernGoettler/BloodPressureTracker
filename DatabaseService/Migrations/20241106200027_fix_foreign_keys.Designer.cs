// <auto-generated />
using System;
using DatabaseService.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DatabaseService.Migrations
{
    [DbContext(typeof(MeasurementsContext))]
    [Migration("20241106200027_fix_foreign_keys")]
    partial class fix_foreign_keys
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DatabaseService.Models.DoctorModel", b =>
                {
                    b.Property<int>("DoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("DoctorId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("DatabaseService.Models.MeasurementsModel", b =>
                {
                    b.Property<int>("MeasurementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Diastolic")
                        .HasColumnType("int");

                    b.Property<string>("PatientSsn")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("SeenDoctorId")
                        .HasColumnType("int");

                    b.Property<int>("Systolic")
                        .HasColumnType("int");

                    b.HasKey("MeasurementId");

                    b.HasIndex("PatientSsn");

                    b.HasIndex("SeenDoctorId");

                    b.ToTable("Measurements");
                });

            modelBuilder.Entity("DatabaseService.Models.PatientModel", b =>
                {
                    b.Property<string>("Ssn")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Ssn");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("DatabaseService.Models.MeasurementsModel", b =>
                {
                    b.HasOne("DatabaseService.Models.PatientModel", "Patient")
                        .WithMany("Measurements")
                        .HasForeignKey("PatientSsn");

                    b.HasOne("DatabaseService.Models.DoctorModel", "Seen")
                        .WithMany()
                        .HasForeignKey("SeenDoctorId");

                    b.Navigation("Patient");

                    b.Navigation("Seen");
                });

            modelBuilder.Entity("DatabaseService.Models.PatientModel", b =>
                {
                    b.Navigation("Measurements");
                });
#pragma warning restore 612, 618
        }
    }
}
